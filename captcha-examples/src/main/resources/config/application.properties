# spring.mvc.view.prefix=
# spring.mvc.view.suffix=*.html
# server.servlet-path=*.html

#### \u7591\u95EE\uFF1A\u5982\u4F55\u6307\u5B9A\u8BF7\u6C42\u540E\u7F00\u662F.html

spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true
## \u9759\u6001\u6587\u4EF6\u8BF7\u6C42\u5339\u914D\u65B9\u5F0F
spring.mvc.static-path-pattern=/**
## \u4FEE\u6539\u9ED8\u8BA4\u7684\u9759\u6001\u5BFB\u5740\u8D44\u6E90\u76EE\u5F55
spring.resources.static-locations=classpath:/static/

#### thymeleaf \u914D\u7F6E
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
## set to false for hot refresh
spring.thymeleaf.cache=false

#### THYMELEAF (ThymeleafAutoConfiguration)
## https://github.com/spring-projects/spring-boot/blob/v1.5.2.RELEASE/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.java

# spring.thymeleaf.cache=true # Enable template caching.
# spring.thymeleaf.check-template=true # Check that the template exists before rendering it.
# spring.thymeleaf.check-template-location=true # Check that the templates location exists.
# spring.thymeleaf.content-type=text/html # Content-Type value.
# spring.thymeleaf.enabled=true # Enable MVC Thymeleaf view resolution.
# spring.thymeleaf.encoding=UTF-8 # Template encoding.
# spring.thymeleaf.excluded-view-names= # Comma-separated list of view names that should be excluded from resolution.
# spring.thymeleaf.mode=HTML5 # Template mode to be applied to templates. See also StandardTemplateModeHandlers.
# spring.thymeleaf.prefix=classpath:/templates/ # Prefix that gets prepended to view names when building a URL.
# spring.thymeleaf.suffix=.html # Suffix that gets appended to view names when building a URL.
# spring.thymeleaf.template-resolver-order= # Order of the template resolver in the chain.
# spring.thymeleaf.view-names= # Comma-separated list of view names that can be resolved.